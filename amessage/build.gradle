apply plugin: "com.moonlitdoor.git-version"
apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "com.github.triplet.play"
apply plugin: "androidx.navigation.safeargs"
//apply plugin: "com.google.firebase.firebase-perf"
//apply plugin: "io.fabric"

project.ext.archivesBaseName = project.name + "-" + gitVersion

println "VERSION NAME: $gitVersion"
println "VERSION CODE: ${gitCommitAndTagCount + 200}"

android {
  compileSdkVersion 28

  lintOptions {
    warningsAsErrors true
    abortOnError true
    xmlReport false
    explainIssues true
    showAll true
  }
  testOptions {
    unitTests {
      includeAndroidResources = true
    }
    execution "ANDROIDX_TEST_ORCHESTRATOR"
    animationsDisabled = true
  }
  playAccountConfigs {
    defaultAccountConfig {
      jsonFile = file("keys.json")
    }
  }
  defaultConfig {
    applicationId "com.moonlitdoor.amessage"
    minSdkVersion 24
    targetSdkVersion 28
    versionCode = gitCommitAndTagCount + 200
    versionName = gitVersion
    playAccountConfig = playAccountConfigs.defaultAccountConfig
    buildConfigField "String", "BUILD_DATE", "\"0\""
    if (largeTests) {
      testInstrumentationRunner "com.moonlitdoor.amessage.AndroidJUnitRunnerLarge"
    } else if (mediumTests) {
      testInstrumentationRunner "com.moonlitdoor.amessage.AndroidJUnitRunnerMedium"
    } else if (smallTests) {
      testInstrumentationRunner "com.moonlitdoor.amessage.AndroidJUnitRunnerSmall"
    } else if (smokeTests) {
      testInstrumentationRunner "com.moonlitdoor.amessage.AndroidJUnitRunnerSmoke"
    } else if (flakyTests) {
      testInstrumentationRunner "com.moonlitdoor.amessage.AndroidJUnitRunnerFlaky"
    } else {
      testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    testInstrumentationRunnerArguments clearPackageData: "true"
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
      }
    }
  }
  signingConfigs {
    release {
      storeFile file(COM_MOONLITDOOR_AMESSAGE_KEY_STORE)
      storePassword COM_MOONLITDOOR_AMESSAGE_KEY_STORE_STORE_PASSWORD
      keyAlias COM_MOONLITDOOR_AMESSAGE_KEY_STORE_KEY_ALIAS
      keyPassword COM_MOONLITDOOR_AMESSAGE_KEY_STORE_KEY_PASSWORD
    }
  }
  buildTypes {
    release {
      buildConfigField "String", "BUILD_DATE", "\"${System.currentTimeMillis()}\""
      resValue "string", "default_web_client_id", COM_MOONLITDOOR_AMESSAGE_FIREBASE_PROD_DEFAULT_WEB_CLIENT_ID
      resValue "string", "firebase_database_url", COM_MOONLITDOOR_AMESSAGE_FIREBASE_PROD_FIREBASE_DATABASE_URL
      resValue "string", "gcm_defaultSenderId", COM_MOONLITDOOR_AMESSAGE_FIREBASE_PROD_GCM_DEFAULT_SENDER_ID
      resValue "string", "google_api_key", COM_MOONLITDOOR_AMESSAGE_FIREBASE_PROD_GOOGLE_API_KEY
      resValue "string", "google_app_id", COM_MOONLITDOOR_AMESSAGE_FIREBASE_PROD_GOOGLE_APP_ID
      resValue "string", "google_crash_reporting_api_key", COM_MOONLITDOOR_AMESSAGE_FIREBASE_PROD_GOOGLE_CRASH_REPORTING_API_KEY
      resValue "string", "google_storage_bucket", COM_MOONLITDOOR_AMESSAGE_FIREBASE_PROD_GOOGLE_STORAGE_BUCKET
//      resValue "string", "project_id", COM_MOONLITDOOR_AMESSAGE_FIREBASE_PROD_PROJECT_ID
//      resValue "string", "com.crashlytics.android.build_id", "\"${UUID.randomUUID()}\""
      signingConfig signingConfigs.release
      //      minifyEnabled true
    }
    debug {
      applicationIdSuffix = ".beta"
      resValue "string", "default_web_client_id", COM_MOONLITDOOR_AMESSAGE_FIREBASE_BETA_DEFAULT_WEB_CLIENT_ID
      resValue "string", "firebase_database_url", COM_MOONLITDOOR_AMESSAGE_FIREBASE_BETA_FIREBASE_DATABASE_URL
      resValue "string", "gcm_defaultSenderId", COM_MOONLITDOOR_AMESSAGE_FIREBASE_BETA_GCM_DEFAULT_SENDER_ID
      resValue "string", "google_api_key", COM_MOONLITDOOR_AMESSAGE_FIREBASE_BETA_GOOGLE_API_KEY
      resValue "string", "google_app_id", COM_MOONLITDOOR_AMESSAGE_FIREBASE_BETA_GOOGLE_APP_ID
      resValue "string", "google_crash_reporting_api_key", COM_MOONLITDOOR_AMESSAGE_FIREBASE_BETA_GOOGLE_CRASH_REPORTING_API_KEY
      resValue "string", "google_storage_bucket", COM_MOONLITDOOR_AMESSAGE_FIREBASE_BETA_GOOGLE_STORAGE_BUCKET
//      resValue "string", "project_id", COM_MOONLITDOOR_AMESSAGE_FIREBASE_BETA_PROJECT_ID
//      resValue "string", "com.crashlytics.android.build_id", "\"${UUID.randomUUID()}\""
      minifyEnabled false
    }
  }
  packagingOptions {
    exclude "META-INF/proguard/androidx-annotations.pro"
  }
  dataBinding {
    enabled true
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  sourceSets {
    String sharedTestDir = "src/sharedTest/java"
    test {
      java.srcDir sharedTestDir
    }
    androidTest {
      java.srcDir sharedTestDir
    }
  }

}

play {
  track(getPlayTrack())
  untrackOld = true
}

dependencies {

//  kapt "androidx.lifecycle:lifecycle-compiler:2.2.0-alpha01"
  kapt "androidx.room:room-compiler:2.1.0-rc01"


  implementation project(":constants")
  implementation project(":domain")

  implementation "androidx.lifecycle:lifecycle-runtime:2.2.0-alpha01"
  implementation "androidx.lifecycle:lifecycle-extensions:2.2.0-alpha01"

  implementation "androidx.navigation:navigation-fragment-ktx:2.1.0-alpha04"
  implementation "androidx.navigation:navigation-ui-ktx:2.1.0-alpha04"
  implementation "androidx.work:work-runtime-ktx:2.1.0-alpha02"
  implementation "androidx.core:core-ktx:1.2.0-alpha01"
  implementation "androidx.constraintlayout:constraintlayout:1.1.3"
  implementation "androidx.appcompat:appcompat:1.1.0-alpha05"
  implementation "com.google.android.material:material:1.0.0"
  implementation "androidx.preference:preference:1.0.0"
  implementation "androidx.legacy:legacy-preference-v14:1.0.0"
  implementation "androidx.recyclerview:recyclerview:1.1.0-alpha05"
  implementation "androidx.legacy:legacy-support-v4:1.0.0"
//  implementation "com.crashlytics.sdk.android:crashlytics:2.10.1"
  implementation "com.google.android.gms:play-services-vision:17.0.2"
  implementation "com.google.code.gson:gson:2.8.5"
  implementation "com.google.firebase:firebase-config:17.0.0"
  implementation "com.google.firebase:firebase-core:16.0.9"
  implementation "com.google.firebase:firebase-messaging:18.0.0"
//  implementation "com.google.firebase:firebase-perf:17.0.0"
  implementation "com.google.android.material:material:1.1.0-alpha07"
  implementation "com.google.zxing:core:3.4.0"
  implementation "com.jakewharton.timber:timber:4.7.1"
  implementation "com.stepstone.stepper:material-stepper:4.3.1"
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.31"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1"
  implementation "org.koin:koin-android:2.0.1"
  implementation "org.koin:koin-androidx-scope:2.0.1"
  implementation "org.koin:koin-androidx-viewmodel:2.0.1"

  implementation "androidx.test.espresso:espresso-idling-resource:3.2.0"

  androidTestImplementation "androidx.test:runner:1.2.0"
  androidTestImplementation "androidx.test.ext:junit-ktx:1.1.1"
  androidTestImplementation "androidx.test:rules:1.2.0"
  androidTestImplementation "androidx.room:room-testing:2.0.0"
//  androidTestImplementation "android.arch.work:work-testing:1.0.1"
//  androidTestImplementation "androidx.legacy:legacy-support-core-utils:1.0.0"
  androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
  androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:3.2.0"
//  androidTestImplementation "android.arch.navigation:navigation-testing:1.0.0-alpha08"

  androidTestUtil "androidx.test:orchestrator:1.2.0"

  testImplementation "androidx.test:runner:1.2.0"
  testImplementation "androidx.test:rules:1.2.0"
  testImplementation "org.robolectric:robolectric:4.2.1"
  testImplementation "androidx.room:room-testing:2.0.0"
  testImplementation "androidx.legacy:legacy-support-core-utils:1.0.0"
  testImplementation "androidx.test.espresso:espresso-core:3.2.0"
  testImplementation "androidx.legacy:legacy-support-core-utils:1.0.0"
  testImplementation "org.koin:koin-test:2.0.1"
  testImplementation "com.squareup.okhttp3:mockwebserver:3.14.2"
  testImplementation "junit:junit:4.12"
  testImplementation "androidx.test.ext:junit-ktx:1.1.1"
  testImplementation "androidx.test.ext:truth:1.2.0"

}

assemble.dependsOn assembleAndroidTest

task connectedLargeTests {
  dependsOn "connectedCheck"
  doFirst {

  }
}

//apply plugin: "com.google.gms.google-services"

task parseMetadata() {
  ext.parse = { param1, param2 ->
    rootProject.file(String.format("amessage/src/main/play/%s", param1)).mkdir()
    def useDefault = true
    def file = rootProject.file(String.format("amessage/src/main/play/%s/whatsnew", param1))
    file.delete()
    def parsedStrings = new XmlParser().parse(rootProject.file(String.format("amessage/src/main/res/%s/strings.xml", param2)))
    parsedStrings["string-array"].each { stringArray ->
      if (stringArray.@name == "metadata_whats_new") {
        stringArray.item.each { item ->
          useDefault = false
          file.append(item.text().replace("\\", "") + "\n")
        }
      }
    }
    rootProject.file(String.format("amessage/src/main/play/%s/listing", param1)).mkdir()
    parsedStrings.string.each { string ->
      if (string.@name == "metadata_title") {
        file = rootProject.file(String.format("amessage/src/main/play/%s/listing/title", param1))
        file.delete()
        file.append(string.text().replace("\\", ""))
      } else if (string.@name == "metadata_short_description") {
        file = rootProject.file(String.format("amessage/src/main/play/%s/listing/shortdescription", param1))
        file.delete()
        file.append(string.text().replace("\\", ""))
      } else if (string.@name == "metadata_full_description") {
        file = rootProject.file(String.format("amessage/src/main/play/%s/listing/fulldescription", param1))
        file.delete()
        file.append(string.text().replace("\\", ""))
      } else if (string.@name == "metadata_whats_new_bug_fixes" && useDefault) {
        file = rootProject.file(String.format("amessage/src/main/play/%s/whatsnew", param1))
        file.delete()
        file.append(string.text().replace("\\", ""))
      }
    }
  }
  doLast {
    parse("en-US", "values")
  }
}

//project.afterEvaluate {
//  project.tasks.getByName("generateReleasePlayResources").dependsOn parseMetadata
//}

