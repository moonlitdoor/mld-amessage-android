buildscript {

  repositories {
    google()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "com.github.ben-manes:gradle-versions-plugin:0.21.0"
    classpath "com.moonlitdoor.git-version:git-version:0.1.1"
    classpath "com.android.tools.build:gradle:3.6.0-alpha03"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.31"
//    classpath "com.google.firebase:perf-plugin:1.2.1"
    classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.1.0-alpha05"
//    classpath "com.github.triplet.gradle:play-publisher:2.2.1"
//    classpath "io.fabric.tools:gradle:1.29.0"
  }

}

allprojects {
  apply plugin: "com.github.ben-manes.versions"
  repositories {
    google()
    jcenter()
  }
  ext.smokeTests = project.hasProperty("smokeTests") ? project.property("smokeTests") : false
  ext.largeTests = project.hasProperty("largeTests") ? project.property("largeTests") : false
  ext.mediumTests = project.hasProperty("mediumTests") ? project.property("mediumTests") : false
  ext.smallTests = project.hasProperty("smallTests") ? project.property("smallTests") : false
  ext.flakyTests = project.hasProperty("flakyTests") ? project.property("flakyTests") : false
  ext.orchestrator = project.hasProperty("orchestrator") ? project.property("orchestrator") : false
  ext.getPlayTrack = { ->
    return "alpha"
  }
  tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
  delete "amessage/src/main/play/en-US"
}
